(self.webpackChunkbattleship=self.webpackChunkbattleship||[]).push([[826],{426:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var i=t(537),o=t.n(i),a=t(645),r=t.n(a)()(o());r.push([e.id,':root {\n  --size: 10;\n}\n\n* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  user-select: none;\n}\n\nhtml,\nbody {\n  height: 100%;\n  width: 100%;\n}\n\nbody {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.announcer {\n  position: absolute;\n  top: -140px;\n  font-size: 50px;\n  text-align: center;\n  padding: 8px;\n  border: 2px solid black;\n  border-radius: 4px;\n  width: 400px;\n}\n\n.ship-preview-frame {\n  padding: 8px;\n  border: 2px solid black;\n  border-radius: 2px;\n  width: 70px;\n  overflow: hidden;\n}\n\n.ship-preview-frame.hidden {\n  visibility: hidden;\n}\n\n.ship-preview-belt {\n  position: relative;\n  left: -373px;\n  display: flex;\n  align-items: center;\n  gap: 30px;\n  transition: 0.25s;\n}\n\n.preview-ship > .part {\n  height: 25px;\n  width: 25px;\n  background-color: lightgrey;\n  border: 1px solid darkcyan;\n}\n\n.your-board-container {\n  position:relative;\n}\n\n.gameboard {\n  position: relative;\n  flex-shrink: 0;\n  display: grid;\n  grid-template-columns: repeat(var(--size), 1fr);\n  width: 500px;\n  height: 500px;\n  border: 5px solid darkcyan;\n  margin: 50px;\n}\n\n.gameboard.player::before {\n  position: absolute;\n  content: "Player";\n  font-size: 48px;\n  top: -80px;\n  left: 170px;\n}\n\n.gameboard.enemy::before {\n  position: absolute;\n  content: "AI";\n  font-size: 48px;\n  top: -80px;\n  left: 210px;\n}\n\n.square {\n  border: 1px solid darkcyan;\n}\n\n.water {\n  background-color: aqua;\n}\n\n.water.checked {\n  background-color: green;\n}\n\n.ship {\n  background-color: darkgrey;\n}\n\n.ship.checked {\n  background-color: rgb(238, 69, 39);\n}\n\n.preview-board {\n  position: absolute;\n  z-index: 1;\n  top: -45px;\n  left: -43px;\n  pointer-events: none;\n  display: grid;\n  grid-template-columns: repeat(calc(var(--size) + 4), 1fr);\n  width: 687px;\n  height: 690px;\n}\n\n.preview-square.active {\n  background-color: rgba(255, 166, 0, 0.5);\n}\n\n.preview-square.active.problematic {\n  background-color: rgba(255, 68, 0, 0.5);\n}\n\n.utilities {\n  position: relative;\n  width: 150px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n}\n\n.utilities > button {\n  font-size: 24px;\n  width: 150px;\n  padding: 8px;\n}\n\n.orientation-switch {\n  text-align: center;\n  font-size: 24px;\n  padding: 8px;\n  border: 1px solid black;\n}\n\n.orientation-switch::before {\n  content: "Press R to rotate\\A";\n  font-size: 20px;\n}\n\n.orientation-switch:hover {\n  transform: scale(1.01);\n  background-color: rgb(238, 237, 237);\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,UAAU;AACZ;;AAEA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;;EAEE,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,eAAe;EACf,kBAAkB;EAClB,YAAY;EACZ,uBAAuB;EACvB,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,uBAAuB;EACvB,kBAAkB;EAClB,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,SAAS;EACT,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,2BAA2B;EAC3B,0BAA0B;AAC5B;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,cAAc;EACd,aAAa;EACb,+CAA+C;EAC/C,YAAY;EACZ,aAAa;EACb,0BAA0B;EAC1B,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,eAAe;EACf,UAAU;EACV,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,eAAe;EACf,UAAU;EACV,WAAW;AACb;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,kCAAkC;AACpC;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,UAAU;EACV,WAAW;EACX,oBAAoB;EACpB,aAAa;EACb,yDAAyD;EACzD,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,wCAAwC;AAC1C;;AAEA;EACE,uCAAuC;AACzC;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,eAAe;EACf,YAAY;EACZ,uBAAuB;AACzB;;AAEA;EACE,8BAA8B;EAC9B,eAAe;AACjB;;AAEA;EACE,sBAAsB;EACtB,oCAAoC;AACtC",sourcesContent:[':root {\n  --size: 10;\n}\n\n* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  user-select: none;\n}\n\nhtml,\nbody {\n  height: 100%;\n  width: 100%;\n}\n\nbody {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.announcer {\n  position: absolute;\n  top: -140px;\n  font-size: 50px;\n  text-align: center;\n  padding: 8px;\n  border: 2px solid black;\n  border-radius: 4px;\n  width: 400px;\n}\n\n.ship-preview-frame {\n  padding: 8px;\n  border: 2px solid black;\n  border-radius: 2px;\n  width: 70px;\n  overflow: hidden;\n}\n\n.ship-preview-frame.hidden {\n  visibility: hidden;\n}\n\n.ship-preview-belt {\n  position: relative;\n  left: -373px;\n  display: flex;\n  align-items: center;\n  gap: 30px;\n  transition: 0.25s;\n}\n\n.preview-ship > .part {\n  height: 25px;\n  width: 25px;\n  background-color: lightgrey;\n  border: 1px solid darkcyan;\n}\n\n.your-board-container {\n  position:relative;\n}\n\n.gameboard {\n  position: relative;\n  flex-shrink: 0;\n  display: grid;\n  grid-template-columns: repeat(var(--size), 1fr);\n  width: 500px;\n  height: 500px;\n  border: 5px solid darkcyan;\n  margin: 50px;\n}\n\n.gameboard.player::before {\n  position: absolute;\n  content: "Player";\n  font-size: 48px;\n  top: -80px;\n  left: 170px;\n}\n\n.gameboard.enemy::before {\n  position: absolute;\n  content: "AI";\n  font-size: 48px;\n  top: -80px;\n  left: 210px;\n}\n\n.square {\n  border: 1px solid darkcyan;\n}\n\n.water {\n  background-color: aqua;\n}\n\n.water.checked {\n  background-color: green;\n}\n\n.ship {\n  background-color: darkgrey;\n}\n\n.ship.checked {\n  background-color: rgb(238, 69, 39);\n}\n\n.preview-board {\n  position: absolute;\n  z-index: 1;\n  top: -45px;\n  left: -43px;\n  pointer-events: none;\n  display: grid;\n  grid-template-columns: repeat(calc(var(--size) + 4), 1fr);\n  width: 687px;\n  height: 690px;\n}\n\n.preview-square.active {\n  background-color: rgba(255, 166, 0, 0.5);\n}\n\n.preview-square.active.problematic {\n  background-color: rgba(255, 68, 0, 0.5);\n}\n\n.utilities {\n  position: relative;\n  width: 150px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n}\n\n.utilities > button {\n  font-size: 24px;\n  width: 150px;\n  padding: 8px;\n}\n\n.orientation-switch {\n  text-align: center;\n  font-size: 24px;\n  padding: 8px;\n  border: 1px solid black;\n}\n\n.orientation-switch::before {\n  content: "Press R to rotate\\A";\n  font-size: 20px;\n}\n\n.orientation-switch:hover {\n  transform: scale(1.01);\n  background-color: rgb(238, 237, 237);\n}'],sourceRoot:""}]);const s=r},645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",i=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),i&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),i&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,i,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(i)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(r[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);i&&r[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{"use strict";var n=[];function t(e){for(var t=-1,i=0;i<n.length;i++)if(n[i].identifier===e){t=i;break}return t}function i(e,i){for(var a={},r=[],s=0;s<e.length;s++){var c=e[s],d=i.base?c[0]+i.base:c[0],l=a[d]||0,A="".concat(d," ").concat(l);a[d]=l+1;var p=t(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var h=o(u,i);i.byIndex=s,n.splice(s,0,{identifier:A,updater:h,references:1})}r.push(A)}return r}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=i(e=e||[],o=o||{});return function(e){e=e||[];for(var r=0;r<a.length;r++){var s=t(a[r]);n[s].references--}for(var c=i(e,o),d=0;d<a.length;d++){var l=t(a[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=c}}},569:e=>{"use strict";var n={};e.exports=function(e,t){var i=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{"use strict";e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,o&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(i,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},993:(e,n,t)=>{"use strict";var i=t(379),o=t.n(i),a=t(795),r=t.n(a),s=t(569),c=t.n(s),d=t(565),l=t.n(d),A=t(216),p=t.n(A),u=t(589),h=t.n(u),f=t(426),v={};function m(e,{Class:n="",Content:t=""}){const i=document.createElement(e);return i.className=n,i.textContent=t,i}v.styleTagTransform=h(),v.setAttributes=l(),v.insert=c().bind(null,"head"),v.domAPI=r(),v.insertStyleElement=p(),o()(f.Z,v),f.Z&&f.Z.locals&&f.Z.locals;const b=document.body,C=m("div",{Class:"announcer"}),g=m("div",{Class:"ship-preview-belt"}),E=m("div",{Class:"ship-preview-frame"}),y=m("div",{Class:"your-board-container"}),x=m("div",{Class:"gameboard"});x.classList.add("player");const w=m("div",{Class:"gameboard"});w.classList.add("enemy");const B=[],k=m("div",{Class:"preview-board"}),S=m("div",{Class:"utilities"}),P=m("div",{Class:"orientation-switch"}),L=m("button",{Class:"random-button",Content:"Auto-placement"}),z=m("button",{Class:"new-game",Content:"restart"}),Y=m("div",{Class:"difficulty-container"}),N=m("select",{Class:"difficulty"});function M(e){const n=m("div",{Class:"preview-ship"});for(let t=0;t<e.length;t++)n.appendChild(m("div",{Class:"part"}));return n}N.innerHTML='\n<option value = "normal">normal</option>\n<option value = "easy">easy</option>\n',Y.append(m("div",{Content:"Difficulty"}),N),S.append(C,E,Y,P,L,z),E.appendChild(g),y.append(x,k);const Z={playerBoard:x,enemyBoard:w,orientationSwitch:P,randomPlacement:L,difficulty:N,newGame:z,buildPage:function(){b.append(y,S,w);for(let e=0;e<14;e++){const n=[];B.push(n);for(let t=0;t<14;t++){const i=m("div",{Class:"preview-square"});e<2||e>11||t<2||t>11?i.classList.add("problematic"):i.classList.add("resettable"),n.push(i),k.appendChild(i)}}},displayBoard:function(e,n){const t="yours"===n?x:w;e.array.forEach((n=>{n.forEach((i=>{const o=m("div",{Class:"square"});"empty"!==i.occupation?o.classList.add("ship"):o.classList.add("water"),o.setAttribute("data-y",e.array.indexOf(n)),o.setAttribute("data-x",n.indexOf(i)),t.appendChild(o)}))}))},refreshBoard:function(e,n,t=!0){const i="yours"===n?x.children:w.children;let o=0;e.array.forEach((e=>{e.forEach((e=>{"empty"!==e.occupation&&(t||e.checked)&&(i[o].classList.remove("water"),i[o].classList.add("ship")),e.checked&&i[o].classList.add("checked"),o++}))}))},clearBoards:function(){for(let e=0;e<100;e++)x.children[e].classList.remove("ship","checked"),x.children[e].classList.add("water"),w.children[e].classList.remove("ship","checked"),w.children[e].classList.add("water")},activatePreviewSquare:function(e){B[e.y+2][e.x+2].classList.add("active")},deactivatePreviewSquare:function(e){B[e.y+2][e.x+2].classList.remove("active")},deactivateAllPreviewSquares:function(){for(const e of k.children)e.classList.remove("active")},resetAllPreviewSquares:function(){for(const e of k.children)e.classList.contains("resettable")&&e.classList.remove("problematic")},markPreviewSquareProblematic:function(e){B[e.y+2][e.x+2].classList.add("problematic")},updateAnnouncer:function(e,n="black"){C.textContent=e,C.style.color=n},displayShipPreview:function(e){g.replaceChildren(),g.style.left="-373px";for(let n=e.length-1;n>=0;n--)g.appendChild(M(e[n]))},toggleHideShipPreview:function(){E.classList.toggle("hidden")},movePreviewBelt:function(){const e=window.getComputedStyle(g).getPropertyValue("left"),n=Number(e.split("").filter((e=>"p"!==e&&"x"!==e)).join(""));g.style.left=n+55+"px"}},q=class{constructor(e){this.gameboard=e}takeTurn(e,n,t){return t.receiveAttack(e,n)}};function T(e){e.sort((()=>Math.random()-.5))}const I=class{constructor(e){this.gameboard=e,this.difficulty="normal",this.foundShip=null,this.foundShipAdjacentCoords=[],this.foundShipOrientation=null,this.optionPositive=null,this.optionNegative=null,this.state=0}reset(){this.#e=[];for(let e=0;e<10;e++)for(let n=0;n<10;n++)this.#e.push({y:e,x:n});T(this.#e)}#e;takeTurn(e){0===this.state?this.randomTurn(e):1===this.state?this.findShipOrientation(e):2===this.state&&this.shootInLine(e)}randomTurn(e){let n,t,i;for(;;){const o=this.#e.shift();if(t=o.y,i=o.x,n=e.receiveAttack(t,i),"shot cancelled"!==n)break}"easy"!==this.difficulty&&"hit"===n&&(this.state=1,this.foundShip={y:t,x:i},this.foundShipAdjacentCoords.push({y:t+1,x:i}),this.foundShipAdjacentCoords.push({y:t-1,x:i}),this.foundShipAdjacentCoords.push({y:t,x:i+1}),this.foundShipAdjacentCoords.push({y:t,x:i-1}),T(this.foundShipAdjacentCoords))}findShipOrientation(e){const n=this.foundShipAdjacentCoords.shift();if(void 0===n)return this.state=0,void this.takeTurn(e);const t=e.receiveAttack(n.y,n.x);if("shot cancelled"!==t)return"hit"===t?(this.state=2,this.foundShipAdjacentCoords=[],this.foundShipOrientation=Math.abs(this.foundShip.x-n.x)>0?"horizontal":"vertical",void("horizontal"===this.foundShipOrientation?(this.optionPositive={y:this.foundShip.y,x:Math.max(this.foundShip.x,n.x)+1},this.optionNegative={y:this.foundShip.y,x:Math.min(this.foundShip.x,n.x)-1}):(this.optionPositive={y:Math.max(this.foundShip.y,n.y)+1,x:this.foundShip.x},this.optionNegative={y:Math.min(this.foundShip.y,n.y)-1,x:this.foundShip.x}))):void 0;this.findShipOrientation(e)}shootInLine(e){let n;if(null!==this.optionPositive){if(n=e.receiveAttack(this.optionPositive.y,this.optionPositive.x),"shot cancelled"===n)return this.optionPositive=null,void this.shootInLine(e);if("hit"===n)return void(this.optionPositive="horizontal"===this.foundShipOrientation?{y:this.optionPositive.y,x:this.optionPositive.x+1}:{y:this.optionPositive.y+1,x:this.optionPositive.x});if("shot missed"===n)return void(this.optionPositive=null)}if(null!==this.optionNegative){if(n=e.receiveAttack(this.optionNegative.y,this.optionNegative.x),"shot cancelled"===n)return this.optionNegative=null,void this.shootInLine(e);if("hit"===n)return void(this.optionNegative="horizontal"===this.foundShipOrientation?{y:this.optionNegative.y,x:this.optionNegative.x-1}:{y:this.optionNegative.y-1,x:this.optionNegative.x});if("shot missed"===n)return void(this.optionNegative=null)}this.foundShip=null,this.foundShipOrientation=null,this.state=0,this.takeTurn(e)}};var j=t(974),U=t.n(j),W=t(484),O=t.n(W);const R=[{start:function(){Z.updateAnnouncer("Place your ships"),_=[new(O())(5),new(O())(4),new(O())(4),new(O())(3),new(O())(3),new(O())(2),new(O())(2),new(O())(2)],V.gameboard.placeAllRandomly(_),Z.refreshBoard(V.gameboard,"enemy's",!1),$=[new(O())(5),new(O())(4),new(O())(4),new(O())(3),new(O())(3),new(O())(2),new(O())(2),new(O())(2)],Z.displayShipPreview($),G=[...Z.playerBoard.children],D=[...Z.enemyBoard.children],G.forEach((e=>e.addEventListener("click",(e=>{!function(e){const n=Number(e.target.getAttribute("data-y")),t=Number(e.target.getAttribute("data-x")),i=$.shift();"Placement cancelled"!==H.gameboard.placeShip(i,n,t,Q)?(ne.currentTime=0,ne.play(),Z.movePreviewBelt(),Z.refreshBoard(H.gameboard,"yours"),ee.forEach((e=>{Z.deactivatePreviewSquare(e),Z.markPreviewSquareProblematic(e)}))):$.unshift(i)}(e),0===$.length&&(K=!0)})))),G.forEach((e=>e.addEventListener("mouseover",(e=>{re(e)})))),G.forEach((e=>e.addEventListener("mouseleave",(e=>{ee.forEach((e=>Z.deactivatePreviewSquare(e))),F=void 0}))))},cleanup:function(){oe(G),Z.deactivateAllPreviewSquares()}},{start:function(){Z.updateAnnouncer("Battle Phase"),Z.toggleHideShipPreview(),Z.newGame.disabled=!1,Z.difficulty.disabled=!0,Z.randomPlacement.disabled=!0,D.forEach((e=>e.addEventListener("click",(e=>{const n=Number(e.target.getAttribute("data-y")),t=Number(e.target.getAttribute("data-x")),i=H.takeTurn(n,t,V.gameboard);if("shot cancelled"!==i){if("hit"===i?(te.currentTime=0,te.play()):"shot missed"===i&&(ie.currentTime=0,ie.play()),Z.refreshBoard(V.gameboard,"enemy's",!1),!V.gameboard.shipsLeft())return X="you",void(K=!0);V.takeTurn(H.gameboard),Z.refreshBoard(H.gameboard,"yours"),H.gameboard.shipsLeft()||(X="enemy",K=!0)}}))))},cleanup:function(){oe(D)}},{start:function(){Z.refreshBoard(V.gameboard,"enemy's"),"you"===X?Z.updateAnnouncer("You won","green"):"enemy"===X&&Z.updateAnnouncer("You lost","red")}}];let H,G,V,D,X,F,J=0,K=!1,Q="horizontal",$=[],_=[],ee=[];new(U());const ne=new Audio(t(650)),te=new Audio(t(648)),ie=new Audio(t(832));function oe(e){e.forEach((e=>e.replaceWith(e.cloneNode())))}function ae(){Z.randomPlacement.disabled=!1,Z.difficulty.disabled=!1,Z.newGame.disabled=!0,H=new q(new(U())),V=new I(new(U())),V.reset(),R[0].start()}function re(e){const n=Number(e.target.getAttribute("data-y")),t=Number(e.target.getAttribute("data-x")),i=$[0];if(void 0===i)return;F=e;const o=H.gameboard.getPlacementCoordinates(i,n,t,Q);ee=o,o.forEach((e=>Z.activatePreviewSquare(e)))}window.addEventListener("click",(function(){K&&(void 0!==R[J].cleanup&&R[J].cleanup(),J++,K=!1,R[J].start())})),Z.orientationSwitch.textContent=Q,Z.orientationSwitch.addEventListener("click",(()=>{Q="horizontal"===Q?"vertical":"horizontal",Z.orientationSwitch.textContent=Q,ee.forEach((e=>Z.deactivatePreviewSquare(e))),void 0!==F&&re(F)})),window.addEventListener("keydown",(e=>{"r"===e.key&&Z.orientationSwitch.click()})),Z.randomPlacement.addEventListener("click",(()=>{H.gameboard.placeAllRandomly($),Z.refreshBoard(H.gameboard,"yours"),K=!0})),Z.difficulty.addEventListener("change",(e=>V.difficulty=e.target.value)),Z.newGame.addEventListener("click",(function(){J=0,F=void 0,oe(G),oe(D),Z.toggleHideShipPreview(),Z.clearBoards(),Z.resetAllPreviewSquares(),ae()}));const se={newGame:ae},ce=new(U());Z.buildPage(),Z.displayBoard(ce,"yours"),Z.displayBoard(ce,"enemy's"),se.newGame()},974:e=>{class n{constructor(){this.checked=!1,this.occupation="empty"}}e.exports=class{constructor(){this.array=this.#n(this.#t),this.ships=[]}#t=10;#n(e){const t=[];for(let i=0;i<e;i++){const i=[];t.push(i);for(let t=0;t<e;t++)i.push(new n)}return t}getPlacementCoordinates(e,n,t,i){const o=[];let a=0,r=0;for(;"horizontal"===i&&o.push({y:n,x:t-r}),"vertical"===i&&o.push({y:n-r,x:t}),a++,a!==e.length&&(r++,"horizontal"===i&&o.push({y:n,x:t+r}),"vertical"===i&&o.push({y:n+r,x:t}),a++,a!==e.length););return o}placeShip(e,n,t,i){const o=this.getPlacementCoordinates(e,n,t,i);for(const e of o){if(e.x<0||e.x>this.#t-1||e.y<0||e.y>this.#t-1)return"Placement cancelled";if("empty"!==this.array[e.y][e.x].occupation)return"Placement cancelled"}for(const n of o)this.array[n.y][n.x].occupation=e;this.ships.push(e)}receiveAttack(e,n){if(n<0||n>this.#t-1||e<0||e>this.#t-1)return"shot cancelled";const t=this.array[e][n];return t.checked?"shot cancelled":(t.checked=!0,"empty"!==t.occupation?(t.occupation.hit(),"hit"):"shot missed")}shipsLeft(){for(const e of this.ships)if(!e.sunk)return!0;return!1}placeAllRandomly(e=[]){for(;0!==e.length;){const n=e.shift(),t=Math.floor(Math.random()*this.#t),i=Math.floor(Math.random()*this.#t),o=Math.random()<=.5?"horizontal":"vertical";"Placement cancelled"===this.placeShip(n,i,t,o)&&e.unshift(n)}}}},484:e=>{e.exports=class{constructor(e){this.length=e,this.timesHit=0,this.sunk=!1}hit(){this.timesHit+=1,this.sunk=this.isSunk()}isSunk(){return this.timesHit===this.length}}},648:(e,n,t)=>{"use strict";e.exports=t.p+"6880bef6062f0e1dba8f.wav"},832:(e,n,t)=>{"use strict";e.exports=t.p+"45851b46a2ed4382906c.wav"},650:(e,n,t)=>{"use strict";e.exports=t.p+"7421a8f14b59a0c74664.wav"}},e=>{e(e.s=993)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,